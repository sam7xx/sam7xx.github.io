name: 彻底禁用Jekyll的自动部署
on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 检查主题目录
        run: |
          if [ ! -d "themes/stellar" ]; then
            echo "错误：themes/stellar目录不存在！"
            exit 1
          fi

      - name: 安装Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: 'npm'

      - name: 安装依赖
        run: |
          npm install hexo-cli -g
          npm install
          cd themes/stellar && npm install && cd ../../

      - name: 构建静态文件
        run: |
          hexo clean
          hexo generate

      # 核心强化：确保.nojekyll文件存在且正确
      - name: 强制生成并验证.nojekyll
        run: |
          # 在public目录生成.nojekyll（覆盖可能存在的旧文件）
          echo "生成.nojekyll文件..."
          touch public/.nojekyll
          # 验证文件是否存在
          if [ ! -f "public/.nojekyll" ]; then
            echo "错误：.nojekyll文件生成失败！"
            exit 1
          fi
          # 查看文件权限（确保可读）
          ls -la public/.nojekyll
          echo "确认：.nojekyll文件已正确生成"

      # 部署到gh-pages分支（强制覆盖旧内容）
      - name: 部署到GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./public
          publish_branch: gh-pages
          force_orphan: true  # 强制创建全新的gh-pages分支，清除历史缓存
          keep_files: false   # 不保留旧文件，确保.nojekyll是最新的

      # 其他平台部署步骤（不变）
      - name: 部署到Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./public
          vercel-args: '--prod'
        continue-on-error: true

      - name: 部署到Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PROJECT_NAME }}
          directory: ./public
          branch: main
        continue-on-error: true
