<%
var banner = {}

if (page.banner) {
  banner.url = page.banner
} else if (theme.topic.tree[page.topic]?.banner != null) {
  banner.url = theme.topic.tree[page.topic]?.banner
} else if (theme.wiki.tree[page.wiki]?.banner != null) {
  banner.url = theme.wiki.tree[page.wiki]?.banner
}
banner = Object.assign(banner, page.banner_info)
// 标题
if (banner.title == null) {
  banner.title = page.h1 != null ? page.h1 : page.title
}
// 副标题
if (banner.subtitle == null) {
  banner.subtitle = page.subtitle
}

// 生成日期信息（确保更新时间常显）
function layoutDateInfo() {
  const publishTime = page.date ? page.date.format('YYYY-MM-DD') : '未知时间';
  // 无论是否更新都显示更新时间
  const updateTime = page.updated ? page.updated.format('YYYY-MM-DD') : publishTime;
  
  // 使用4个非换行空格分隔（&nbsp;）
  return `<span class="publish-time">发布时间：${publishTime}</span>&nbsp;&nbsp;&nbsp;&nbsp;
          <span class="update-time">更新时间：${updateTime}</span>`;
}

function layoutBreadcrumb() {
  if (page.breadcrumb === false) {
    return `<div class="top"></div>`
  }
  
  // 使用hexo-wordcount计算文章元信息
  let metaInfo = ''
  if (page.layout == 'post' && page.content) {
    // 调用hexo-wordcount提供的函数
    const wordCount = wordcount(page.content);
    const readTime = min2read(page.content);
    // 使用4个非换行空格分隔（&nbsp;）
    metaInfo = `
      <div class="breadcrumb-meta text-sm">
        文章字数：${wordCount}&nbsp;&nbsp;&nbsp;&nbsp;阅读时长：${readTime}分钟
      </div>
    `;
  }
  
  // 构建面包屑导航（三行左对齐布局）
  let el = ''
  el += `<div class="top bread-nav footnote">`
  el += `<div class="left breadcrumb-container">`
  
  // 第一行：面包屑导航（左对齐）
  el += `<div class="flex-row breadcrumb-path text-sm" id="breadcrumb" style="text-align: left;">`
  el += `<a class="cap breadcrumb" href="${pretty_url(config.root)}">${__("btn.home")}</a>`
  if (theme.wiki.tree[page.wiki]) {
    el += partial('breadcrumb/wiki')
  } else if (page.notebook) {
    el += partial('breadcrumb/note')
  } else if (page.layout == 'post') {
    el += partial('breadcrumb/blog')
  } else {
    el += partial('breadcrumb/page')
  }
  el += `</div>`
  
  // 第二行：文章元信息（左对齐）
  el += metaInfo ? `<div style="text-align: left; padding: 4px 0;">${metaInfo}</div>` : ''
  
  // 第三行：日期信息（左对齐，更新时间常显）
  el += `<div class="breadcrumb-date text-sm" style="text-align: left; padding: 4px 0;">`
  el += layoutDateInfo()
  el += `</div>`
  
  el += `</div>` // 关闭.left
  el += `</div>` // 关闭.top
  return el
}

function layoutTitle() {
  if (banner.title?.length > 0) {
    return `<h1 class="text title"><span>${banner.title}</span></h1>`
  } else {
    return ''
  }
}

function layoutSubtitle() {
  if (banner.subtitle?.length > 0) {
    return `<div class="text subtitle">${banner.subtitle}</div>`
  } else {
    return ''
  }
}

function layoutIcon() {
  if (banner.avatar?.length > 0 || banner.icon?.length > 0) {
    return `<img class="lazy avatar" data-src="${banner.avatar || banner.icon}">`
  } else {
    return ''
  }
}

function layoutBottom() {
  const el_icon = layoutIcon()
  const el_title = layoutTitle()
  const el_subtitle = layoutSubtitle()
  let cls = ''
  if (el_title.length > 0 && el_subtitle.length == 0) {
    cls += ' only-title'
  }
  if (el_title.length > 0) {
    return `
    <div class="bottom${cls}">
      ${el_icon}
      <div class="text-area">
        ${el_title}
        ${el_subtitle}
      </div>
    </div>
    `
  } else {
    return ``
  }
}

function layoutDiv() {
  const bottom = layoutBottom()
  if (page.breadcrumb === false && bottom.length == 0) {
    return ``
  }
  const top = layoutBreadcrumb()
  let style = ``
  let el = ``
  el += `<div class="article banner${scrollreveal(' ')} top">`
  if (banner.url?.length > 0) {
    el += `<img class="lazy bg" data-src="${banner.url}">`
    if (banner.color) {
      style += ' style="--text-banner:' + banner.color + '"'
    }
  }

  el += `
  <div class="content"${style}>
    ${top}
    ${bottom}
  </div>
  `
  el += `</div>`
  return el
}
%>
<%- layoutDiv() %>
