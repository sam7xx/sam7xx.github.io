// 通用 hsla 函数
x-hsla(h = var(--hue), s = var(--sat), l = var(--light), a = var(--alpha))
  return unquote('hsla(%s %s %s / %s)' % (h s l a))

// 设置不同透明度的主题色
x-theme-alpha(a = 1)
  return unquote('hsla(%s %s %s / %s)' % (var(--hue) var(--sat) var(--light) a))

// 设置基础主题色
x-set-theme-with-color($color)
  --hue: hue($color)
  --sat: saturation($color)
  --light: lightness($color)
  --alpha: alpha($color)
  --theme: x-theme-alpha(1)
  --theme-a10: x-theme-alpha(0.1)
  --theme-a20: x-theme-alpha(0.2)
  --theme-a30: x-theme-alpha(0.3)

// 设置链接颜色
x-set-link-with-color($color)
  $hue = hue($color)
  $sat = saturation($color)
  $light = lightness($color)
  --link: x-hsla($hue, $sat, $light, 1)
  --link-a20: x-hsla($hue, $sat, $light, 0.2)

// 设置背景色
x-set-bg-colors($scheme)
  $hue = $c-base-hue
  $sat = 0%
  $light = $scheme == 'dark' ? 0% : 100%
  --bg-a20: x-hsla($hue, $sat, $light, 0.2)
  --bg-a50: x-hsla($hue, $sat, $light, 0.5)
  --bg-a60: x-hsla($hue, $sat, $light, 0.6)
  --bg-a75: x-hsla($hue, $sat, $light, 0.75)
  --bg-a100: x-hsla($hue, $sat, $light, 1)

// 设置文本及相关色
x-set-text-colors($scheme, $p0 = 1, $p1 = 0.8, $p2 = 0.7, $p3 = 0.5, $p4 = 0.4)
  $hue = $c-base-hue
  $sat = 0%
  $light = $scheme == 'dark' ? 100% : 0%
  
  --text: x-hsla($hue, $sat, $light, $p0)
  --text-reverse: x-hsla($hue, $sat, $scheme == 'dark' ? 0% : 100%, $p0)
  --text-p1: x-hsla($hue, $sat, $light, $p1)
  --text-p2: x-hsla($hue, $sat, $light, $p2)
  --text-p3: x-hsla($hue, $sat, $light, $p3)
  --text-p4: x-hsla($hue, $sat, $light, $p4)

  --text-meta: x-hsla($hue, $sat, $light, 0.2)
  --text-code: x-hsla($hue, $sat, $light, 0.9)

  --text-a10: x-hsla($hue, $sat, $light, 0.1)
  --text-a20: x-hsla($hue, $sat, $light, 0.2)

  $sat = $scheme == 'dark' ? 24% : 50%
  $light = $scheme == 'dark' ? 72% : 12%
  $alpha = $scheme == 'dark' ? 0.08 : 0.04
  --block: x-hsla($hue, $sat, $light, $alpha)
  --block-border: x-hsla($hue, $sat, $light, $alpha * 1.5)

// 设置图片滤镜 - 深色模式图片背景为#31383A，对比度更低
x-set-image-filters($scheme)
  if $scheme == 'dark'
    --image-filter: invert(1) hue-rotate(180deg)
    --image-brightness: 0.65  // 降低亮度，使背景接近#31383A
    --image-contrast: 0.85    // 进一步降低对比度
    --image-saturate: 0.9     // 稍微降低饱和度
    --image-filter-value: invert(1) hue-rotate(180deg) brightness(0.65) contrast(0.85) saturate(0.9)
  else
    --image-filter: none
    --image-brightness: 1
    --image-contrast: 1
    --image-saturate: 1
    --image-filter-value: none

// ---------------- apply theme ----------------
// 设置浅色模式
dynamic-theme-light()
  $hue = $c-base-hue
  --background: x-hsla($hue, 20%, 98%, 1)
  --card: $site-background-image ? hsla(white, 0.5) : white

  x-set-bg-colors('light')
  x-set-text-colors('light')
  x-set-image-filters('light')

// 设置深色模式
dynamic-theme-dark()
  $hue = $c-base-hue
  --background: x-hsla($hue, 8%, 12%, 1)
  @media screen and (max-width: $device-mobile-max)
    --background: black
  --card: $site-background-image ? hsla(white, 0.25) : x-hsla($hue, 10%, 24%, 1)

  x-set-bg-colors('dark')
  x-set-text-colors('dark')
  x-set-image-filters('dark')
  --text-code: x-hsla(20, 75, 60, 1)

:root
  // 主题色
  x-set-theme-with-color($c-theme)
  // 强调色
  --accent: $c-accent
  // 链接
  x-set-link-with-color($c-link)

  // dynamic colors
  dynamic-theme-light()
  @media (prefers-color-scheme: dark)
    dynamic-theme-dark()

:root[data-theme="light"]
  dynamic-theme-light()

:root[data-theme="dark"]
  dynamic-theme-dark()

// ========== 图片主题变化解决方案 ==========

// 深色模式下的图片滤镜应用 - 背景为#31383A，对比度更低，保护左侧栏
:root[data-theme="dark"]
  // 应用滤镜到内容区域的图片
  .post-content img,
  .article-content img,
  .entry-content img,
  .markdown-body img,
  .content img,
  .post-body img,
  [class*="content"] img:not(.no-theme):not(.emoji)
    filter: invert(1) hue-rotate(180deg) brightness(0.65) contrast(0.85) saturate(0.9)
    transition: filter 0.3s ease
  
  // 保护左侧栏和其他UI元素
  .sidebar img,
  .widget img,
  .navbar img,
  .header img,
  .footer img,
  .avatar,
  .logo,
  .site-brand img,
  .site-logo img,
  .author-avatar img,
  .no-theme
    filter: none !important

  // 对于需要更浅背景的图片
  img[data-light-bg],
  .light-bg-img
    filter: invert(1) hue-rotate(180deg) brightness(0.8) contrast(0.9) saturate(0.95) !important
  
  // 对于需要保持较深背景的图片
  img[data-dark-bg],
  .dark-bg-img
    filter: invert(1) hue-rotate(180deg) brightness(0.5) contrast(0.8) saturate(0.85) !important

// 表情图片不随主题变化
.emoji,
.emoticon,
[class*="emoji"],
[class*="emoticon"],
img[src*="emoji"],
img[src*="emoticon"],
img[data-emoji]
  filter: none !important

// 方法2: 使用CSS变量（如果浏览器支持）
img.theme-aware:not(.emoji)
  filter: var(--image-filter-value)
  transition: filter 0.3s ease

// 方法3: 为特定类型的图片添加主题支持
.themed-image:not(.emoji)
  :root[data-theme="dark"] &
    filter: invert(1) hue-rotate(180deg) brightness(0.65) contrast(0.85) saturate(0.9)
    transition: filter 0.3s ease
  
  :root[data-theme="light"] &
    filter: none
    transition: filter 0.3s ease

// 确保左侧栏图片不受影响
.sidebar,
.widget,
.navbar,
.header,
.footer
  img
    filter: none !important

// 额外选项：如果需要完全禁用某些图片的主题变化
.no-theme,
[data-no-theme]
  filter: none !important